@model List<Pharmix.Web.Finance.Entities.ViewModels.Customer.DocumentViewModel>
@using  Pharmix.Data.Enums
@{
    ViewData["Title"] = "_documents";
    string fileTypeCSS = string.Empty;
    string documentType = string.Empty;

    if (TempData.ContainsKey("CustomerId"))
    {
        TempData.Keep("CustomerId");
    }

    string directoryPath = ViewBag.DirectoryPath;
    bool isImg = false;
    string imagePath = string.Empty;
}

<style>

    .imgPreviewModal {
        display: none;
        position: fixed;
        z-index: 1050;
        padding-top: 100px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0) !important;
        background-color: rgba(0,0,0,0.9);
        transition: all .5s ease-in-out;
    }

    .img-modal-content {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
    }

    .imgPreviewModal #caption {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
        text-align: center;
        color: #ccc;
        padding: 10px 0;
        height: 150px;
    }

    .img-modal-content, #caption {
        animation-name: zoom;
        animation-duration: 0.6s;
    }

    @@keyframes zoom {
        from {
            transform: scale(0)
        }

        to {
            transform: scale(1)
        }
    }

    .imgPreviewModal .imgPreviewClose {
        position: absolute;
        top: 15px;
        right: 35px;
        color: #dcd0d0;
        font-size: 40px;
        font-weight: bold;
        transition: 0.3s;
        cursor: pointer;
    }

    @@media only screen and (max-width: 700px) {
        .img-modal-content {
            width: 100%;
        }
    }
</style>

@if (Model != null)
{
    <div class="col-md-12">
        @foreach (var document in Model)
        {
            isImg = false;
            documentType = document.DocumentTypeViewModel?.Name ?? string.Empty;
            if (documentType.Equals(DocumentTypeEnum.PDF.ToString(), StringComparison.CurrentCultureIgnoreCase))
            {
                fileTypeCSS = "fa fa-4x fa-file-pdf-o";
            }
            else if (documentType.Equals(DocumentTypeEnum.DOCX.ToString(), StringComparison.CurrentCultureIgnoreCase))
            {
                fileTypeCSS = "fa fa-4x fa-file-word-o";
            }
            else if (documentType.Equals(DocumentTypeEnum.XLSX.ToString(), StringComparison.CurrentCultureIgnoreCase))
            {
                fileTypeCSS = "fa fa-4x fa-file-excel-o";
            }
            else if (documentType.Equals(DocumentTypeEnum.PPT.ToString(), StringComparison.CurrentCultureIgnoreCase))
            {
                fileTypeCSS = "fa fa-4x fa-file-powerpoint-o";
            }
            else if (documentType.Equals(DocumentTypeEnum.IMAGE.ToString(), StringComparison.CurrentCultureIgnoreCase)
                                    || documentType.Equals(DocumentTypeEnum.JPEG.ToString(), StringComparison.CurrentCultureIgnoreCase)
                                    || documentType.Equals(DocumentTypeEnum.JPG.ToString(), StringComparison.CurrentCultureIgnoreCase)
                                    || documentType.Equals(DocumentTypeEnum.PNG.ToString(), StringComparison.CurrentCultureIgnoreCase))
            {
                isImg = true;
                imagePath = directoryPath + "/" + document.Id + "." + documentType.ToLower();
                fileTypeCSS = "fa fa-4x fa-file-image-o";
            }
            else if (documentType.Equals(DocumentTypeEnum.TXT.ToString(), StringComparison.CurrentCultureIgnoreCase) || documentType.Equals(DocumentTypeEnum.FILE.ToString(), StringComparison.CurrentCultureIgnoreCase))
            {
                fileTypeCSS = "fa fa-4x fa-file-text-o";
            }
            else if (documentType.Equals(DocumentTypeEnum.ZIP.ToString(), StringComparison.CurrentCultureIgnoreCase))
            {
                fileTypeCSS = "fa fa-4x fa-file-archive-o";
            }
            string documentNameSubstr = document.Title?.Length > 7 ? document.Title?.Substring(0, 7) + ".." : document.Title ?? "";
            var dType = document.CustomerId > 0 ? "Customer" : "Loan";


            if (!isImg)
            {
                <a asp-controller="Document" asp-action="Download" asp-route-id="@document.Id" asp-route-CustomerId="@document.CustomerId" asp-route-LoanId="@document.LoanId">
                    <div class="col-md-1 document" document-unique-id="@document.Id" document-name="@document.Name">
                        <i class="@fileTypeCSS"></i>
                        <span>@documentNameSubstr</span>
                        @*</a>*@
                    </div>
                </a>
            }
            else
            {
                <div class="col-md-1 document imgDoc" document-unique-id="@document.Id" document-name="@document.Name" customer-id="@document.CustomerId" loan-id="@document.LoanId" style="cursor:pointer;">
                    <i class="@fileTypeCSS"></i>
                    <span>@documentNameSubstr</span>
                    @*</a>*@
                </div>
            }

        }
    </div>
}

<div id="imgPreviewModal" class="imgPreviewModal">
    <span class="imgPreviewClose">&times;</span>
    <img class="img-modal-content" id="img01">
    <div id="caption"></div>
</div>

<script>
    $(function () {
        var modal = $('#imgPreviewModal');
        $('.imgDoc').click(function () {
            var imgPath = $(this).attr('image-path');
            var docName = $(this).attr('document-name');
            var id = $(this).attr('document-unique-id');
            var customerId = $(this).attr('customer-id');
            var loanId = $(this).attr('loan-id');

            var callbackPreview = function (response) {
                //if (imgPath) {
                $(modal).css( 'display', 'block' );
                    $('.img-modal-content').attr('src', imgPath);
                $('.img-modal-content').attr('src', "data:image/jpg;base64,"+ response);
                    $('#imgPreviewModal #caption').html(docName);
                //}

                //Framework.Popup.CreateInfoPopup("Preview", $('#tstImgPreview').html(), null, null, null, true);

            }
            Framework.Utility.ExecuteAjaxRequest("@Url.Action("DownloadImage")", { Id: id, LoanId:loanId, CustomerId:customerId}, callbackPreview);
        });

        $('.imgPreviewModal .imgPreviewClose').click(function () {
            $(modal).css({ 'display': 'none' });
         });
    });
</script>